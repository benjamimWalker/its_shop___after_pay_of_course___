openapi: 3.0.3
info:
  title: test-dev-php
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: jeramie.bernhard@example.org
                password:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: Anhct0P1c-V%
              required:
                - email
                - password
      security: []
  /api/signup:
    post:
      summary: ''
      operationId: postApiSignup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hfosrviyflmjnb
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: demetris19@example.com
                password:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: '1c3^^)\]'
              required:
                - name
                - email
                - password
      security: []
  /api/stores:
    get:
      summary: ''
      operationId: getApiStores
      description: ''
      parameters:
        -
          in: query
          name: filter_column
          description: 'Column to filter by'
          example: id
          required: false
          schema:
            type: string
            description: 'Column to filter by'
            example: id
        -
          in: query
          name: filter_value
          description: 'Value to filter by'
          example: maxime
          required: false
          schema:
            type: string
            description: 'Value to filter by'
            example: maxime
        -
          in: query
          name: sort_column
          description: 'Column to sort by'
          example: ipsum
          required: false
          schema:
            type: string
            description: 'Column to sort by'
            example: ipsum
        -
          in: query
          name: sort_direction
          description: 'Direction to sort by'
          example: distinctio
          required: false
          schema:
            type: string
            description: 'Direction to sort by'
            example: distinctio
        -
          in: query
          name: per_page
          description: 'Number of results per page'
          example: ut
          required: false
          schema:
            type: string
            description: 'Number of results per page'
            example: ut
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Stores
    post:
      summary: ''
      operationId: postApiStores
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Stores
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: nynuzhrnhybitp
                url:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
                  example: 'http://www.kirlin.com/'
                logo:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
                  example: ylrtvzoqmstluiyqjmteukw
                address:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: glquodfjllvraeb
                owner_id:
                  type: integer
                  description: 'This field is required when <code>method</code> is <code>POST</code>.'
                  example: 16
    delete:
      summary: ''
      operationId: deleteApiStores
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Stores
  '/api/stores/{id}':
    get:
      summary: ''
      operationId: getApiStoresId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Stores
    put:
      summary: ''
      operationId: putApiStoresId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Stores
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: xo
                url:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
                  example: 'http://www.toy.com/odit-autem-voluptas-dolores'
                logo:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
                  example: vkciyxoorycltxiddvi
                address:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: mpdoqswxfzcvbdzeuwelyuq
                owner_id:
                  type: integer
                  description: 'This field is required when <code>method</code> is <code>POST</code>.'
                  example: 3
    delete:
      summary: ''
      operationId: deleteApiStoresId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Stores
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the store.'
        example: 14
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters:
        -
          in: query
          name: filter_column
          description: 'Column to filter by'
          example: reprehenderit
          required: false
          schema:
            type: string
            description: 'Column to filter by'
            example: reprehenderit
        -
          in: query
          name: filter_value
          description: 'Value to filter by'
          example: facere
          required: false
          schema:
            type: string
            description: 'Value to filter by'
            example: facere
        -
          in: query
          name: sort_column
          description: 'Column to sort by'
          example: quia
          required: false
          schema:
            type: string
            description: 'Column to sort by'
            example: quia
        -
          in: query
          name: sort_direction
          description: 'Direction to sort by'
          example: est
          required: false
          schema:
            type: string
            description: 'Direction to sort by'
            example: est
        -
          in: query
          name: per_page
          description: 'Number of results per page'
          example: sequi
          required: false
          schema:
            type: string
            description: 'Number of results per page'
            example: sequi
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    post:
      summary: ''
      operationId: postApiUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: enmnqkpd
                email:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid email address. Must not be greater than 255 characters.'
                  example: mertie85@example.com
                password:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: u<~up%vgbYM=8\_gn
    delete:
      summary: ''
      operationId: deleteApiUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
  '/api/users/{id}':
    get:
      summary: ''
      operationId: getApiUsersId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    put:
      summary: ''
      operationId: putApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: mqlnxykndyryk
                email:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid email address. Must not be greater than 255 characters.'
                  example: qnader@example.com
                password:
                  type: string
                  description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
                  example: 5`oT-z2ByB+Lo=a
    delete:
      summary: ''
      operationId: deleteApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 64
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Stores
    description: 'Stores API'
  -
    name: Users
    description: 'Users API'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
