name: Stores
description: 'Stores API'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/stores
    metadata:
      groupName: Stores
      groupDescription: 'Stores API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      filter_column:
        name: filter_column
        description: 'Column to filter by'
        required: false
        example: id
        type: string
        enumValues: []
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to filter by'
        required: false
        example: maxime
        type: string
        enumValues: []
        custom: []
      sort_column:
        name: sort_column
        description: 'Column to sort by'
        required: false
        example: ipsum
        type: string
        enumValues: []
        custom: []
      sort_direction:
        name: sort_direction
        description: 'Direction to sort by'
        required: false
        example: distinctio
        type: string
        enumValues: []
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page'
        required: false
        example: ut
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      filter_column: id
      filter_value: maxime
      sort_column: ipsum
      sort_direction: distinctio
      per_page: ut
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3bda8fPZv5gD6e41ahV6Ekc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/stores
    metadata:
      groupName: Stores
      groupDescription: 'Stores API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: nynuzhrnhybitp
        type: string
        enumValues: []
        custom: []
      url:
        name: url
        description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: 'http://www.kirlin.com/'
        type: string
        enumValues: []
        custom: []
      logo:
        name: logo
        description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: ylrtvzoqmstluiyqjmteukw
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: glquodfjllvraeb
        type: string
        enumValues: []
        custom: []
      owner_id:
        name: owner_id
        description: 'This field is required when <code>method</code> is <code>POST</code>.'
        required: false
        example: 16
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: nynuzhrnhybitp
      url: 'http://www.kirlin.com/'
      logo: ylrtvzoqmstluiyqjmteukw
      address: glquodfjllvraeb
      owner_id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fE6P81e6Z5gc3davDa4bkVh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stores/{id}'
    metadata:
      groupName: Stores
      groupDescription: 'Stores API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the store.'
        required: true
        example: 14
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1kv46a5Z6bhgaDVde83EPfc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/stores/{id}'
    metadata:
      groupName: Stores
      groupDescription: 'Stores API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the store.'
        required: true
        example: 2
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: xo
        type: string
        enumValues: []
        custom: []
      url:
        name: url
        description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: 'http://www.toy.com/odit-autem-voluptas-dolores'
        type: string
        enumValues: []
        custom: []
      logo:
        name: logo
        description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: vkciyxoorycltxiddvi
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: mpdoqswxfzcvbdzeuwelyuq
        type: string
        enumValues: []
        custom: []
      owner_id:
        name: owner_id
        description: 'This field is required when <code>method</code> is <code>POST</code>.'
        required: false
        example: 3
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: xo
      url: 'http://www.toy.com/odit-autem-voluptas-dolores'
      logo: vkciyxoorycltxiddvi
      address: mpdoqswxfzcvbdzeuwelyuq
      owner_id: 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6aadP138gvE5kehDb6cZ4Vf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/stores/{id}'
    metadata:
      groupName: Stores
      groupDescription: 'Stores API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the store.'
        required: true
        example: 8
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h3vV4kebD6gdZaP8a1c6f5E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/stores
    metadata:
      groupName: Stores
      groupDescription: 'Stores API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vaeb46V1E5DgP6fZ3kch8ad'
    controller: null
    method: null
    route: null
    custom: []
