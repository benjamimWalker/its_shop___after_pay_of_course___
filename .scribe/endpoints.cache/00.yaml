## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: 'Users API'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: 'Users API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      filter_column:
        name: filter_column
        description: 'Column to filter by'
        required: false
        example: reprehenderit
        type: string
        enumValues: []
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to filter by'
        required: false
        example: facere
        type: string
        enumValues: []
        custom: []
      sort_column:
        name: sort_column
        description: 'Column to sort by'
        required: false
        example: quia
        type: string
        enumValues: []
        custom: []
      sort_direction:
        name: sort_direction
        description: 'Direction to sort by'
        required: false
        example: est
        type: string
        enumValues: []
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page'
        required: false
        example: sequi
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      filter_column: reprehenderit
      filter_value: facere
      sort_column: quia
      sort_direction: est
      per_page: sequi
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6d46Vh5gbaeD31cavZfPkE8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: 'Users API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: enmnqkpd
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: mertie85@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: u<~up%vgbYM=8\_gn
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: enmnqkpd
      email: mertie85@example.com
      password: u<~up%vgbYM=8\_gn
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D41Pgd8Z65aVeb36cEvhkfa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: 'Users API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 64
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 64
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E65gfcZVaba4DdhkvP38e61'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: 'Users API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 64
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 64
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: mqlnxykndyryk
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'This field is required when <code>method</code> is <code>POST</code>.  Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: qnader@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'This field is required when <code>method</code> is <code>POST</code>. Must not be greater than 255 characters.'
        required: false
        example: 5`oT-z2ByB+Lo=a
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: mqlnxykndyryk
      email: qnader@example.com
      password: 5`oT-z2ByB+Lo=a
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fke6PEV8v651D3cZ4dhbgaa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: 'Users API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 64
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 64
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b5k3vacagPfD6E48V6h1eZd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: 'Users API'
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aVe8fghPEbZk65ac6d1D43v'
    controller: null
    method: null
    route: null
    custom: []
